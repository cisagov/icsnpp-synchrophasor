import SYNCHROPHASOR;
import Zeek_SYNCHROPHASOR;

# Copyright 2023 Battelle Energy Alliance, LLC

# C37.118.2-2011, E.2, Network communications using Internet protocol (IP)
# "Default port numbers shall be 4712 for TCP and 4713 for UDP, but in all cases,
#  the user shall be provided the means to set port numbers as desired."
protocol analyzer spicy::SYNCHROPHASOR_TCP over TCP:
    parse with SYNCHROPHASOR::Frames,
    port 4712/tcp;
protocol analyzer spicy::SYNCHROPHASOR_UDP over UDP:
    parse with SYNCHROPHASOR::Frames,
    port 4713/udp;

on SYNCHROPHASOR::CommandFrame -> event SYNCHROPHASOR::CommandFrame(
    $conn,
    $is_orig,
    message.header.sync.frameType,
    message.header.timeStamp,
    message.header.frameSize,
    message.chk,
    message.header.sync.version,
    message.header.dataStreamId,
    self.cmd,
    self.extframe);

on SYNCHROPHASOR::ConfigFrame -> event SYNCHROPHASOR::ConfigFrame(
    $conn,
    $is_orig,
    message.header.sync.frameType,
    message.header.timeStamp,
    message.header.frameSize,
    message.chk,
    message.header.sync.version,
    message.header.dataStreamId,
    self.initialized,
    self.timeBase,
    self.contIdx,
    self.numPMUExpected,
    self.numPMUActual,
    self.dataRate,
    self.allStationNames,
    self.allPhasorNames,
    self.allAnalogNames,
    self.allDigitalNames);
# TODO: as described in C37.118.2-2011, 6.4, and parsed with ConfigFrame, PMUConfig and PMUConfig3 unit
#   types, configuration frames can be pretty complicated. Rather than include every possible field
#   into this event, for now I'm going to observe how this parser does in the field and expand as needed.

on SYNCHROPHASOR::DataFrame -> event SYNCHROPHASOR::DataFrame(
    $conn,
    $is_orig,
    message.header.sync.frameType,
    message.header.timeStamp,
    message.header.frameSize,
    message.chk,
    message.header.sync.version,
    message.header.dataStreamId,
    self.initialized,
    self.numPMUExpected,
    self.numPMUActual);
# TODO: as described in C37.118.2-2011, 6.3, and parsed with DataFrame and PMUData
#   types in synchrophasor.spicy, data frames can be pretty complicated and very verbose.
#   Rather than include every possible field in this event, for now I'm going to observe how this parser
#   does in the field and expand as needed.

on SYNCHROPHASOR::HeaderFrame -> event SYNCHROPHASOR::HeaderFrame(
    $conn,
    $is_orig,
    message.header.sync.frameType,
    message.header.timeStamp,
    message.header.frameSize,
    message.chk,
    message.header.sync.version,
    message.header.dataStreamId,
    self.data);
